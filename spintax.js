function parseSpintax(spintax) {
    var match, result = spintax, regex = /\{([^{}]*)\}/;

    while (match = regex.exec(result)) {
        var choices = match[1].split("|");
        result = result.replace(match[0], choices[Math.floor(Math.random() * choices.length)]);
    }

    return result;
}

function countCharacters(text) {
    return text.length;
}

// Function to find the min and max length of parsed spintax
function findMinMax(spintax, iterations) {
    let minLength = Infinity;
    let maxLength = -Infinity;
    let tempResult, tempLength;
    let shortest = '';
    let longest = '';

    for (let i = 0; i < iterations; i++) {
        tempResult = parseSpintax(spintax);
        tempLength = countCharacters(tempResult);
        
        if (tempLength < minLength) {
            minLength = tempLength;
            shortest = tempResult; // Save the shortest result
        }
        if (tempLength > maxLength) {
            maxLength = tempLength;
            longest = tempResult; // Save the longest result
        }
    }

    return { minLength, maxLength, shortest, longest, tempResult };
}

// Example usage:
let spintaxS = "%%title%% –≤ {–æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω| —É–µ–± –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞|–¥–∏–≥–∏—Ç–∞–ª–µ–Ω –º–∞–≥–∞–∑–∏–Ω|–µ-–º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞} %%sitename%% {–ü–æ—Ä—ä—á–∞–π—Ç–µ —Å—ä—Å 100% –¥–∏—Å–∫—Ä–µ—Ç–Ω–∞ –µ–∫—Å–ø—Ä–µ—Å–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ö—É–ø–µ—Ç–µ —Å –Ω–∞–ø—ä–ª–Ω–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–Ω–∞ –±—ä—Ä–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ó–∞—è–≤–µ—Ç–µ –¥–Ω–µ—Å —Å –∏–∑—Ü—è–ª–æ –¥–∏—Å–∫—Ä–µ—Ç–Ω–∞ –±—ä—Ä–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞}. {–ì—Ä–∞–Ω–∏—Ü–∞—Ç–∞ –µ —Å–∞–º–æ –≤—ä–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ|–ù—è–º–∞ –≥—Ä–∞–Ω–∏—Ü–∏ –≤ –∏–∑–±–æ—Ä–∞ –ø—Ä–∏ –Ω–∞—Å|–ù–µ –º–æ–∂–µ –¥–æ—Ä–∏ –¥–∞ —Å–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ}! {‚ù§Ô∏è|üíñ|‚ù£Ô∏è} %%page%%";
let spintaxM = "%%title%% –≤ {–æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω| —É–µ–± –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞|–¥–∏–≥–∏—Ç–∞–ª–µ–Ω –º–∞–≥–∞–∑–∏–Ω|–µ-–º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞} %%sitename%% {–ü–æ—Ä—ä—á–∞–π—Ç–µ –ª–µ—Å–Ω–æ —Å 100% –¥–∏—Å–∫—Ä–µ—Ç–Ω–∞ –µ–∫—Å–ø—Ä–µ—Å–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ö—É–ø–µ—Ç–µ —Å–µ–≥–∞ —Å –Ω–∞–ø—ä–ª–Ω–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–Ω–∞ –±—ä—Ä–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ó–∞—è–≤–µ—Ç–µ –¥–Ω–µ—Å —Å –∏–∑—Ü—è–ª–æ –ø–æ–≤–µ—Ä–∏—Ç–µ–ª–Ω–∞ –±—ä—Ä–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞}! {‚ù§Ô∏è|üíñ|‚ù£Ô∏è} %%page%%";
let spintaxL = "%%title%% –≤ {–æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω|—É–µ–± –º–∞–≥–∞–∑–∏–Ω–∞|–æ–Ω–ª–∞–π–Ω —Å–µ–∫—Å —à–æ–ø|–µ-–º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞} %%sitename%% {100% –¥–∏—Å–∫—Ä–µ—Ç–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ü–æ–≤–µ—Ä–∏—Ç–µ–ª–Ω–∞ –±—ä—Ä–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞}! {‚ù§Ô∏è|üíñ|‚ù£Ô∏è} %%page%%";
//let spintax = " –≤ {–æ–Ω–ª–∞–π–Ω –º–∞–≥–∞–∑–∏–Ω|—É–µ–± –º–∞–≥–∞–∑–∏–Ω–∞|–æ–Ω–ª–∞–π–Ω —Å–µ–∫—Å —à–æ–ø|–µ-–º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞}  {100% –¥–∏—Å–∫—Ä–µ—Ç–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞|–ü–æ–≤–µ—Ä–∏—Ç–µ–ª–Ω–∞ –±—ä—Ä–∑–∞ –¥–æ—Å—Ç–∞–≤–∫–∞}! {‚ù§Ô∏è|üíñ|‚ù£Ô∏è}";

let spintaxFinal = spintaxS;

let minMax = findMinMax(spintaxFinal, 10000);
console.log(`Minimum length: ${minMax.minLength}`);
console.log(`Maximum length: ${minMax.maxLength}`);
console.log(`Shortest result:${minMax.shortest}`);
console.log(`Longest result: ${minMax.longest}`);


